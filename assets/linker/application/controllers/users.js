// Generated by CoffeeScript 1.6.3
(function() {
  'use strict';
  Application.Controllers.controller("UsersController", [
    "$rootScope", "$scope", "$location", "$socket", "User", "SessionService", "$route", "$routeParams", function($rootScope, $scope, $location, $socket, User, SessionService, $route, $routeParams) {
      var UsersController;
      UsersController = (function() {
        function UsersController() {
          this.initScopedMethods();
        }

        UsersController.prototype.index = function($scope) {
          console.log("" + $rootScope.action + " action called");
          return $scope.users = User.query(function(success) {
            return console.log(success);
          }, function(error) {
            return console.log(error);
          });
        };

        UsersController.prototype["new"] = function($scope) {
          return console.log("" + $rootScope.action + " action called");
        };

        UsersController.prototype.edit = function($scope) {
          console.log("" + $rootScope.action + " action called");
          if ($routeParams.id) {
            return $scope.user = User.get({
              id: $routeParams.id,
              action: "edit"
            }, function(success) {
              return console.log(success);
            }, function(error) {
              return console.log(error);
            });
          }
        };

        UsersController.prototype.show = function($scope) {
          console.log("" + $rootScope.action + " action called");
          if ($routeParams.id) {
            return $scope.user = User.get({
              id: $routeParams.id
            }, function(success) {
              return console.log(success);
            }, function(error) {
              return console.log(error);
            });
          }
        };

        UsersController.prototype.getScope = function() {
          return $scope;
        };

        UsersController.prototype.initScopedMethods = function() {
          $scope.showMessage = function() {
            return $scope.message && $scope.message.length;
          };
          $scope.getUser = function(user) {
            user = User.get(user);
            return user;
          };
          $scope.getAuthenticatedUser = function() {
            var user;
            user = SessionService.getUser();
            return user;
          };
          $scope.setOrder = function(orderby) {
            if (orderby === $scope.orderby) {
              $scope.reverse = !$scope.reverse;
            }
            return $scope.orderby = orderby;
          };
          $scope.addUser = function() {
            var error, success, user;
            user = new User({
              name: $scope.inputData.name.length ? $scope.inputData.name : void 0,
              email: $scope.inputData.email.length ? $scope.inputData.email : void 0,
              password: $scope.inputData.password.length ? $scope.inputData.password : void 0
            });
            return User.save(user, success = function(data, status, headers, config) {
              $scope.message = "New user added!";
              $scope.status = 200;
              $socket.emit("addUser", data);
              return $location.path('/users');
            }, error = function(data, status, headers, config) {
              $scope.message = data.errors;
              return $scope.status = status;
            });
          };
          $scope.updateUser = function(user) {
            var error, success;
            user = {
              id: $scope.user.id,
              name: $scope.user.name,
              email: $scope.user.email,
              password: $scope.inputData.password
            };
            return User.update($scope.user, success = function(data, status, headers, config) {
              $scope.message = "User updated!";
              $scope.status = 200;
              $socket.emit("updateUser", data);
              $location.path('/users');
              return $rootScope.user = data;
            }, error = function(data, status, headers, config) {
              $scope.message = data.errors;
              return $scope.status = status;
            });
          };
          return $scope.deleteUser = function(user) {
            var r;
            r = confirm("Are you sure?");
            if (r === true) {
              User["delete"]({
                id: user.id
              }, function(success) {
                console.log(success);
                $scope.users = _.difference($scope.users, user);
                return $socket.emit("deleteUser", user);
              }, function(error) {
                return console.log(error);
              });
            }
            return false;
          };
        };

        return UsersController;

      })();
      return window.UsersController = new UsersController();
    }
  ]);

}).call(this);
